{"version":3,"sources":["app/components/Home/index.jsx","app/components/Home/Home.jsx","app/components/Users/index.jsx","app/components/Users/Users.jsx","app/Routers/index.jsx","app/Routers/Routers.jsx","app/components/Header/index.jsx","app/components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","Jumbotron","Container","href","Component","Users","className","Routers","basename","process","path","Header","document","location","pathname","Nav","variant","Item","src","alt","Link","active","this","isHomePage","isUserPage","eventKey","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","axios","interceptors","request","use","req","err","Promise","reject"],"mappings":"kWACeA,E,4JCEb,WACE,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,iEACA,qHAIA,mDACqB,IACnB,mBAAGC,KAAK,gEAAR,8C,GAZsBC,aCAnBC,G,kKCEb,WACE,OACE,qBAAKC,UAAU,eAAf,SACE,kD,GAJ2BF,cCFpBG,MCGA,WACb,OACE,cAAC,IAAD,CAAQC,SAAUC,wBAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,Y,gBCXKC,G,sKCIb,WACE,MAAmC,WAA/BC,SAASC,SAASC,W,wBAGxB,WACE,MAAmC,MAA/BF,SAASC,SAASC,W,oBAIxB,WACE,OACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOV,UAAU,SAA9B,UACE,cAACS,EAAA,EAAIE,KAAL,UACE,qBAAKC,IAAK,yBAA0BZ,UAAU,UAAUa,IAAI,OAG9D,cAACJ,EAAA,EAAIE,KAAL,UACE,cAACF,EAAA,EAAIK,KAAL,CAAUd,UAAU,OAAOe,OAAQC,KAAKC,aAAcpB,KAAK,IAA3D,yBAIF,cAACY,EAAA,EAAIE,KAAL,UACE,cAACF,EAAA,EAAIK,KAAL,CACEd,UAAU,OACVe,OAAQC,KAAKE,aACbC,SAAS,QACTtB,KAAK,SAJP,kC,GAvB0BC,cCOrBsB,EARH,kBACV,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,UCKSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,IACAa,IAAMC,aAAaC,QAAQC,KACzB,SAACC,OACD,SAACC,GAAD,OAASC,QAAQC,OAAOF,Q","file":"static/js/main.6925699d.chunk.js","sourcesContent":["import Home from \"./Home\";\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Jumbotron, Container } from \"react-bootstrap\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Jumbotron>\r\n        <Container>\r\n          <h3>Teste de Front-end Compasso UOL</h3>\r\n          <p>\r\n            Este é um teste de Front-End para vaga de desenvolvedor FullStack na\r\n            Compasso UOL\r\n          </p>\r\n          <p>\r\n            Link para o Teste:{\" \"}\r\n            <a href=\"https://github.com/recrutamento-compasso/api-github-interview\">\r\n              api-github-interview\r\n            </a>\r\n          </p>\r\n        </Container>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n","import Users from \"./Users\";\r\n\r\nexport default Users;\r\n","import React, { Component } from \"react\";\r\nimport \"./Users.scss\";\r\n\r\nexport default class Users extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"w-75 content\">\r\n        <p>Hello World</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Routers from \"./Routers\";\r\nexport default Routers;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"../components/Home\";\r\nimport Users from \"../components/Users\";\r\nexport default function Routers() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/users\" >\r\n          <Users></Users>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import Header from \"./Header\";\r\nexport default Header;\r\n","import { Nav } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport \"./Header.scss\";\r\nexport default class Header extends Component {\r\n  isUserPage() {\r\n    if (document.location.pathname === \"/users\") return true;\r\n    else return false;\r\n  }\r\n  isHomePage() {\r\n    if (document.location.pathname === \"/\") return true;\r\n    else return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Nav variant=\"tabs\" className=\"header\">\r\n        <Nav.Item>\r\n          <img src={\"assets/img/gh-logo.png\"} className=\"gh-logo\" alt=\"\" />\r\n        </Nav.Item>\r\n \r\n        <Nav.Item>\r\n          <Nav.Link className=\"link\" active={this.isHomePage()} href=\"/\">\r\n            Início\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className=\"link\"\r\n            active={this.isUserPage()}\r\n            eventKey=\"users\"\r\n            href=\"/users\"\r\n          >\r\n            Usuários\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n","import Routers from \"./app/Routers/index\";\nimport \"./App.scss\";\nimport Header from \"./app/components/Header\";\nconst App = () => (\n  <div className=\"App\">\n    <Header></Header>\n    <div className=\"app-container\">\n      <Routers></Routers>\n    </div>\n  </div>\n);\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport axios from \"axios\";\n\nimport consts from \"./App/shared/constants\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\naxios.interceptors.request.use(\n  (req) => {},\n  (err) => Promise.reject(err)\n);\n"],"sourceRoot":""}